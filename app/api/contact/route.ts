import { NextRequest, NextResponse } from 'next/server';function isValidEmail(v:string){return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v);}export async function POST(req:NextRequest){try{const {name,email,phone,message,service}=await req.json();if(!name||!email||!message)return NextResponse.json({error:'Missing fields'},{status:400});if(!isValidEmail(email))return NextResponse.json({error:'Invalid email'},{status:400});const apiKey=process.env.RESEND_API_KEY;const to=process.env.CONTACT_TO_EMAIL;const from=process.env.CONTACT_FROM_EMAIL;if(!apiKey||!to||!from)return NextResponse.json({error:'Server not configured'},{status:500});const html=`<div><h2>New enquiry</h2><p><b>Service:</b> ${service||'General'}</p><p><b>Name:</b> ${name}</p><p><b>Email:</b> ${email}</p>${phone?`<p><b>Phone:</b> ${phone}</p>`:''}<pre>${message}</pre></div>`;const res=await fetch('https://api.resend.com/emails',{method:'POST',headers:{'Authorization':`Bearer ${apiKey}`,'Content-Type':'application/json'},body:JSON.stringify({from,to:[to],subject:`New enquiry â€” ${name}`,html,reply_to:email})});if(!res.ok)return NextResponse.json({error:'Email failed'},{status:500});return NextResponse.json({ok:true});}catch(e){return NextResponse.json({error:'Server error'},{status:500});}}